- 외래키
두개의 테이블을 연결 시켜줌, 중복 데이터가 없도록 방지해준다. 다른테이블의 기본키를 참조한다. 참조 무결성의 원칙을 지킬수 있다. 무결성이란 데이터가 항상 정확한 값을 유지하는 성질을 뜻한다. 예를 들면 주키(primary key)제약, 도메인 제약 등이 있다.

- 기본키
식별가능한 키를 슈퍼키라고 한다.(= 속성의 값이 유일할때) 이 슈퍼키들 중 minimize한 키를 후보키라고 한다. 선별된 후보키들 중에서 정한 단 하나의 집합을 기본키라고 한다. 특징으로는 유일하고, 식별가능해야한다.

- ER 다이어그램
Entity 와 Relation의 줄임말로, 말그대로 각 개체들의 관계를 다이어그램으로 표현한것을 말한다. 개체관계도 라고도 한다.
1, 2, 3, BCNF, 4, 5정규화등 정석적인 DB의 테이블 설계 방식이 있지만, 실제로는 ER Diagram을 이용해서 실세계를 많이표현하고, 실제 프로젝트에도 많이 쓰인다.

- 복합 키
두개 이상의 속성을 묶어서 기본키로 지정하는것.

- 연관관계
참조 키로 다른 테이블의 기본키를 참조하면 두 테이블은 연관관계에 있다고 한다. 참조 무결성의 원칙을 지켜야 한다.
- 연관관계의 종류 
1. many to one : 예시가 잘 생각이 안난다,,,
2. one to one : 예시를 들면 부부의 경우 one to one 관계가 될 것이다.
3. many to many : 현실세계의 대부분이 이에 해당한다. 테이블을 설계할떄, 이런 연관관계가있다면 중간에 매핑테이블을두어 개발하는것이 용이하다.

-정리 : 각 객체를 엔티티 테이블로 설계하고, 객체들간의 행위를 릴레이션(relation)테이블로 설계하는게 포인트다.

- 정규화
테이블간의 중복된 데이터를 허용하지 않는것이 가장 큰 목표    
정규화는 제 1정규화부터 시작한다. 1정규화는 모든 속성값들이 원자적인 값을 가져야하는 조건이 있다.
그리고 2, 3, BCNF, 4, 5 순으로 조건이 추가되는데, 데이터베이스 시간에 자세하게 다루므로 수업을 잘 듣는것도 좋은 방법이다.
실제로는 BCNF와 3정규화를 가장 많이 쓰며, 각각 trade-off를 따져서 선택한다.
(근데 사실 정규화는 잘 안쓰고, 거의 ERD로 설계한다고 한다.)

- 반 정규화
테이블간의 중복된 데이터를 허용하고, 조회 속도를 향상시키는 방법이다.
사실 모든 조건들을 지키고, 테이블을 설계한다는 것은 현실적으로 불가능한 일이고, 반 정규화를 통해 현실에서는 성능을 더 중요시 한다는걸 알 수있다.
