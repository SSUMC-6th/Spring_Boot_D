- join
inner, outer,natural, left, right 등의 조인연산이 있고, 서로 다른 연산끼리 조합해서 사용할수도 있다.
DB에서 데이터를 가져오기 위해 필수적인 연산이고, 카타시안 곱의 방법으로 데이터를 가져온다. DB에 많은 부하를 걸어서 비용이 큰 연산이므로 조심해서 사용해야한다.(성능측면)
- natural join 
다른 두테이블에서 PK, FK를 인식해서 그 칼럼값에 일치하게 테이블을 합치는데, PK가 두개이상인경우, 어떤 값으로 합쳐질지 모르므로, 조심해서 사용하고, ON키워드를 사용해서 기준 칼럼을 명시하는것이 좋다. 대체 키워드로는 using [칼럼이름] 이있다.

- left/right inner/outer join
키워드를 중심으로 왼쪽, 오른쪽 테이블을 중심으로 테이블을 병합한다. 예를들어 left outer join을 하면, 오른쪽테이블에서 칼럼에 없는 값이 있어도 null값으로 채우고 연산을 수해한다. DB에서 null값이 최대한 없도록 해야하는데 조심해서 다뤄야 할 부분이다. inner의 경우 null값은 배제하고 두 테이블에 모두 있는 값들만 조회한다.

- ON
자연조인은 테이블을 병합한뒤 기준이 되는 칼럼 또한 하나로 합친다. BUT, ON 키워드를 사용한다면 기준 칼럼이 각각 하나씩 생성된다. 예를 들면
select id
from user u join post p on u.id = p.user_id 쿼리를 수행한다면 자연조인에서는 id라는 칼럼하나로 합쳐지지만, ON을 쓴경우는 u.id, p.user_id 두 칼럼으로 나타나게된다.

- 나만의 ERD 설계 및 쿼리 꿀팁..?
프로젝트에서 먼저 짜여진 피그마, or 와이어프레임을 한화면씩 끊어서본다. 그 화면에서 동적으로 필요한 데이터가 무엇인지 파악한다.
ex) 구글 검색창을 생각한다면 내 계정이름, 나의 바로가기, 커스텀설정화면을 제외하고는 전세계어떤 사람이 페이지에 들어와도 똑같은 화면일것이다.
여기서 필요한 데이터가 바로 select 절에 들어갈 것들! 그리고 그 데이터를 가져올 저장소가 from절에 들어갈 테이블들!
어렵게 생각하지말고 단순한 발상으로 접근하는것이 좋을듯,,합니다,,,
